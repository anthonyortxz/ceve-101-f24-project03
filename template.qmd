---
title: "CEVE 101: Project 03"
author: "Anthony Ortiz Ramirez (ao76)" # CHANGE THIS
date: "2024-10-23"

# do not change anything below this line
engine: julia
code-annotations: hover
format:
    html: default
    docx: default
---

We begin by loading the required packages.

```{julia}
using Revise                      # <1>
using RainwaterHarvesting         # <2>
```

1. `Revise` allows us to update code without restarting Julia.
2. We load the `RainwaterHarvesting` package that contains our simulation tools.

### Setting the file path

Next, we specify the path to the rainfall data file and read it in.

```{julia}
filepath = "data/74.txt" # <1>   
rainfall_data = RainfallData(filepath) # <2>
```

1. This is the path to the rainfall data file for the station of interest.
2. This creates a `RainfallData` object containing the rainfall data for the specified station.

If we dig under the hood a bit, we can see that there are two main pieces of information:

- `station_info`: a dictionary containing information about the station, such as its name and location.
- `annual_data`: a dictionary mapping years to `AnnualRainfallData` objects, each containing the date and precipitation data for a given year.

### Plotting the Data

We can plot the data for one or all of the years to verify that it looks correct.

```{julia}
plot(rainfall_data) # <1>
```

1. This `plot` function is defined in [viz.jl](./RainwaterHarvesting/src/viz.jl) and is a thin wrapper around the Plots.jl package.

### Discussion

Given txt 74, also known as Jaguaribe, we see that after data cleaning there is 50 years worth of data from 1973 to present. With this in mind we can conclude and infer that we have sufficient information for meaningful risk management. This place in Brazil is known for its high amounts of droughts. The era where droughts hapened the most was in the years of 2012-2017 which we can see aligns with the data given from our graph/plot. Most missing data could come from the fact that droughts happened which would lead to no data being available. 
Source: Seigerman, C. K., Leite, N. S., Martins, E. S. P., & Nelson, D. R. (2024). At the extremes: Assessing interrelations among the impacts of and responses to extreme hydroclimatic events in Cear√°, Northeast Brazil. Journal of Hydrology, 632, 130850. https://doi.org/10.1016/j.jhydrol.2024.130850


## Understanding the Theoretical Model

A big problem with these equations is the abundance of assumptions being made. THere are many assumptions that are being made which can lead to inaccurate estimates. FOr example, for consumption we are assuming that we are in an ideal world where the household uses the water from the tank afer day 150. THis is not true since it could happen any day after or any day before 150 days passes. Furthurmore, we are assuming that each household tank contains only 74.1 liters per day uring the dry season. Again, this number could vary for multiple different factors. Some of these factors might include(location, average temperature, time, season, etc.). Additionally, we are not factoring in evaportation which is a big reason for many droughts so if we are able to incoporate it then it will help the estimate more. To recieve a more accurate and precise number I think we should start off by taking more data that will output a better number. I also think it would be better to change C_t from a number to an equation t provide a better estimate. 

### Mass Balance Equation

The modified mass balance model for the rainwater tank is given by:

$$
V_{t+1} = V_t + Q_t - C_t - E_t| 0 \leq V_t \leq V_\text{max}
$$

- $V_t$: the volume of water in the tank at time $t$
- $Q_t$ is the volume of water added to the tank at time $t$
- $C_t$ is the volume of water consumed at time $t$
- $V_\text{max}$: the maximum volume of the tank
- $E_t$: The average amoount of water loss due to evaporation at a pecific location during at time t.

Where I decided to chaneg the value of C_t and include a value for E_t(Average water loss due to evaporation at a certain location at time t)

## Model Implementation and Testing

### Defining the Model Parameters

We can define the model parameters with sensible default values.
You will have the opportunity to change these values later.

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.85,      # <2>
    roof_area_m2=55.0,            # <3>
    first_flush_mm=1.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

I increased te roof area, doing this will increase the water flow of the tank. THerefore we can infer that there is a directly proportional relationship between the inflow of the water tank with the area of the roof.

### Running the Simulation for One Year

Let's run the model for the year 1981.

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

1. We select the annual rainfall data for the year 1981.
2. We run the simulation for the year 1981.
3. We plot the results, again using a `plot` function defined in [viz.jl](./RainwaterHarvesting/src/viz.jl).

To compare rainfall and tank volume:

```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

Observe how the tank's water level responds to rainfall events.
Note any periods when the tank runs dry or overflows.

### Reliability Analysis

We can run simulations for all years, one at a time, and then check how many times the tank runs dry.
You can run simulations for all years at once with the following code:

```{julia}
all_years = sort(collect(keys(rainfall_data.annual_data)))          # <1>
all_results = [run_timesteps(rainfall_data.annual_data[year], param) for year in all_years]   # <2>
any_failures = [!isempty(result.failure_dates) for result in all_results]  # <3>
println("Number of years with failures: ", sum(any_failures), " out of ", length(all_years))  # <4>
```

1. We get all the years in order.
2. We run the simulation for each year.
3. We check if any failures occurred.
4. We print the number of years with failures and the total number of years.
